// –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import TelegramBot from 'node-telegram-bot-api';
import { initializeApp } from "firebase/app";
import { getDatabase, ref, get } from "firebase/database";

// ----------- –ö–æ–Ω—Ñ–∏–≥ Firebase -------------
const firebaseConfig = {
  apiKey: "AIzaSyAM7lLohh7L2Y5z_-cl33Vm4lcTibzgIm4",
  authDomain: "arthurstuff-dae5b.firebaseapp.com",
  databaseURL: "https://arthurstuff-dae5b-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "arthurstuff-dae5b",
  storageBucket: "arthurstuff-dae5b.appspot.com",
  messagingSenderId: "536755331219",
  appId: "1:536755331219:web:232bb38b18590ce8756d66"
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

// ----------- –ö–æ–Ω—Ñ–∏–≥ Telegram -------------
const token = process.env.BOT_TOKEN || "7306466390:AAHZ8QmWTeiR99HHSQAGsrlFqcllc8ZaMdg";
const bot = new TelegramBot(token, { polling: true });

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ");

// ----------- –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -------------
const users = {}; // chatId => { awaitingCode: boolean }

// ----------- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é -------------
const mainMenu = [
  [{ text: "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è" }],
  [{ text: "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ" }],
  [{ text: "–ö–∞—Ç–∞–ª–æ–≥" }]
];


// ----------- –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ ---------
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  if (users[chatId]) delete users[chatId];

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ —Å –º–µ–Ω—é
  await bot.sendPhoto(chatId, "https://ik.imagekit.io/borsokov/TG-Bot/1.png", {
    reply_markup: {
      keyboard: mainMenu,
      resize_keyboard: true
    }
  });
});

// ----------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π -------------
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text ? msg.text.trim() : "";

  if (!text || text.startsWith('/')) return; // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∑–¥–µ—Å—å

  // --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
  if (text === "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è") {
    users[chatId] = { awaitingCode: true };

    await bot.sendPhoto(chatId, "https://ik.imagekit.io/borsokov/TG-Bot/2.png", {
      reply_markup: {
        keyboard: [[{ text: "–ù–∞–∑–∞–¥" }]],
        resize_keyboard: true
      }
    });
    return;
  }

  if (text === "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ") {
    await bot.sendMessage(chatId,
      "–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:\n" +
      "üìß –ü–æ—á—Ç–∞ –æ—Ç–¥–µ–ª–∞: arthurdasler@gmail.com\n" +
      "üîó –ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: @arthurborsokov\n"
    );
    return;
  }

  if (text === "–ö–∞—Ç–∞–ª–æ–≥") {
    await bot.sendPhoto(chatId, "https://ik.imagekit.io/borsokov/TG-Bot/3.png", {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥",
              web_app: { url: "https://arthurstuff.ru" } // —Ç–≤–æ–π –¥–æ–º–µ–Ω
            }
          ]
        ]
      }
    });
    return;
  }

  // --- –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∏–∑ –º–µ–Ω—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ ---
  if (text === "–ù–∞–∑–∞–¥" && users[chatId] && users[chatId].awaitingCode) {
    delete users[chatId];
    await bot.sendPhoto(chatId, "https://ik.imagekit.io/borsokov/TG-Bot/1.png", {
      reply_markup: {
        keyboard: mainMenu,
        resize_keyboard: true
      }
    });
    return;
  }

  // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ) ---
  if (users[chatId] && users[chatId].awaitingCode) {
    const code = text.toLowerCase();

    try {
      const codeRef = ref(db, 'codes/' + code);
      const snapshot = await get(codeRef);

      if (snapshot.exists()) {
        const data = snapshot.val();
        await bot.sendMessage(chatId,
          `‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è: ${data.dropName || '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'}\n` +
          `–ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ: ${data.assignedTo || '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'}\n` +
          `–ù–æ–º–µ—Ä: ${data.individualNumber || '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'}`
        );
      } else {
        await bot.sendMessage(chatId, "‚ùå –¢–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
      }
    } catch (err) {
      console.error(err);
      await bot.sendMessage(chatId, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Firebase");
    }

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –ø–æ–¥–º–µ–Ω—é
    await bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥' –¥–ª—è –≤—ã—Ö–æ–¥–∞:", {
      reply_markup: {
        keyboard: [[{ text: "–ù–∞–∑–∞–¥" }]],
        resize_keyboard: true
      }
    });
    return;
  }
});